#define F_CPU 16000000UL
#define BAUD_RATE 9600

#include <avr/io.h>
#include "ST7735.h"
#include "LCD_GFX.h"
#include <stdlib.h>
#include <avr/interrupt.h>

void Initialize()
{
	cli(); // Disable global interrupts
	
	// Moisture sensor input pins C0
	DDRC &= ~(1<<DDRC0);

	lcd_init();
	
	// Setup for ADC (10bit = 0-1023)
	// Clear power reduction bit for ADC
	PRR0 &= ~(1 << PRADC);

	// Select Vref = AVcc
	ADMUX |= (1 << REFS0);
	ADMUX &= ~(1 << REFS1);

	// Set the ADC clock div by 128
	// 16M/128=125kHz
	ADCSRA |= (1 << ADPS0);
	ADCSRA |= (1 << ADPS1);
	ADCSRA |= (1 << ADPS2);

	// Select Channel ADC0 (pin C0)
	ADMUX &= ~(1 << MUX0);
	ADMUX &= ~(1 << MUX1);
	ADMUX &= ~(1 << MUX2);
	ADMUX &= ~(1 << MUX3);

	ADCSRA |= (1 << ADATE);   // Autotriggering of ADC

	// Free running mode ADTS[2:0] = 000
	ADCSRB &= ~(1 << ADTS0);
	ADCSRB &= ~(1 << ADTS1);
	ADCSRB &= ~(1 << ADTS2);

	// Disable digital input buffer on ADC pin
	DIDR0 |= (1 << ADC0D);

	// Enable ADC
	ADCSRA |= (1 << ADEN);

	// Start conversion
	ADCSRA |= (1 << ADSC);
	
	sei(); // Enable global interrupts
}

void Smiley() {
  LCD_drawString(35, 10, "Your plant is happy", 0xFFFF, 0xA165); 
  LCD_drawCircle(0, 0, 60, FFFF00); // Face
  LCD_drawCircle(50, 40, 6, 0x0000); // Eyes
  LCD_drawCircle(110, 40, 6, 0x0000); 
  LCD_drawCircle(60, 90, 30, 0x0000); // Mouth
  LCD_drawBlock(50, 60, 110, 90, FFFF00);
}

void Frowny() {
  LCD_drawString(35, 10, "Your plant is thirsty!", 0xFFFF, 0xA165);
  LCD_drawCircle(0, 0, 60, FFFF00); // Face
  LCD_drawCircle(50, 40, 6, 0x0000); // Eyes
  LCD_drawCircle(110, 40, 6, 0x0000); 
  LCD_drawCircle(60, 90, 30, 0x0000); // Mouth
  LCD_drawBlock(50, 90, 110, 120, FFFF00);
}

int main(void)
{
  while(1){
    if (ADC < 300) { // thirsty
      Frowny();
    } else { // smiley
      Smiley();
    }
  }
}

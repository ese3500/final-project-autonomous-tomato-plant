#define F_CPU 16000000UL
#define BAUD_RATE 9600
#define BAUD_PRESCALER (((F_CPU / (BAUD_RATE * 16UL))) - 1)

#include <avr/interrupt.h>
#include <stdlib.h>
#include <stdio.h>
#include <avr/io.h>
#include <util/delay.h>

#include "uart.h"

char String[50];
int adc_val = 0;

void Initialize()
{
cli(); // Disable global interrupts

// Setup for ADC (10bit = 0-1023)
// Clear power reduction bit for ADC
PRR0 &= ~(1 << PRADC);

// Select Vref = AVcc
ADMUX |= (1 << REFS0);
ADMUX &= ~(1 << REFS1);

// Set the ADC clock div by 128
// 16M/128=125kHz
ADCSRA |= (1 << ADPS0);
ADCSRA |= (1 << ADPS1);
ADCSRA |= (1 << ADPS2);

// Select Channel ADC0 (pin C0)
ADMUX &= ~(1 << MUX0);
ADMUX &= ~(1 << MUX1);
ADMUX &= ~(1 << MUX2);
ADMUX &= ~(1 << MUX3);

ADCSRA |= (1 << ADATE);   // Autotriggering of ADC

// Free running mode ADTS[2:0] = 000
ADCSRB &= ~(1 << ADTS0);
ADCSRB &= ~(1 << ADTS1);
ADCSRB &= ~(1 << ADTS2);

// Disable digital input buffer on ADC pin
DIDR0 |= (1 << ADC0D);

// Enable ADC
ADCSRA |= (1 << ADEN);

// Start conversion
ADCSRA |= (1 << ADSC);

sei(); // Enable global interrupts
}

int main(void)
{

Initialize();

UART_init(BAUD_PRESCALER);
sprintf(String,"starting");
UART_putstring(String);

while(1)
{
adc_val = ADC;
sprintf(String,"ADC Value: %d \r\n", adc_val);
UART_putstring(String);
_delay_ms(200);
}
}

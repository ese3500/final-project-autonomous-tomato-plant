// iota() -- need buffer when printing out ADC values

#define F_CPU 16000000UL
#define BAUD_RATE 9600

#include <avr/io.h>
#include "ST7735.h"
#include "LCD_GFX.h"
#include <stdlib.h>
#include <avr/interrupt.h>

// The ADCs being read by the LDRs
int top_right_LDR = 0;
int top_left_LDR = 0;
int bottom_right_LDR = 0;
int bottom_left_LDR = 0;

void Initialize()
{
	cli(); // Disable global interrupts
	
	//// top_right_LDR Red LED output pin
	//DDRD |= (1<<DDRD5);
	//// top_left_LDR Yellow LED output pin
	//DDRD |= (1<<DDRD5);
	//// bottom_right_LDR Green LED output pin
	//DDRD |= (1<<DDRD5);
	//// bottom_left_LDR Blue LED output pin
	//DDRD |= (1<<DDRD5);

	// Moisture sensor input pin
	DDRD &= ~(1<<DDRD0);

	lcd_init();
	
	// Setup for ADC (10bit = 0-1023)
	// Clear power reduction bit for ADC
	PRR0 &= ~(1 << PRADC);

	// Select Vref = AVcc
	ADMUX |= (1 << REFS0);
	ADMUX &= ~(1 << REFS1);

	// Set the ADC clock div by 128
	// 16M/128=125kHz
	ADCSRA |= (1 << ADPS0);
	ADCSRA |= (1 << ADPS1);
	ADCSRA |= (1 << ADPS2);

	// Select Channel ADC5 (pin C5 = top right, red LED)
	ADMUX &= ~(1 << MUX0);
	ADMUX &= ~(1 << MUX1);
	ADMUX &= ~(1 << MUX2);
	ADMUX &= ~(1 << MUX3);

	ADCSRA |= (1 << ADATE);   // Autotriggering of ADC

	// Free running mode ADTS[2:0] = 000
	ADCSRB &= ~(1 << ADTS0);
	ADCSRB &= ~(1 << ADTS1);
	ADCSRB &= ~(1 << ADTS2);

	// Disable digital input buffer on ADC pin
	DIDR0 |= (1 << ADC0D);

	// Enable ADC
	ADCSRA |= (1 << ADEN);

	// Start conversion
	ADCSRA |= (1 << ADSC);
	
	sei(); // Enable global interrupts
}

// top_right_LDR Red LED
void top_right_LDR_ADC_set() {
	// Select Channel ADC5 (pin C5 = top right)
	ADMUX &= ~(1 << MUX0);
	ADMUX |= (1 << MUX1);
	ADMUX &= ~(1 << MUX2);
	ADMUX |= (1 << MUX3);
}

// top_left_LDR Yellow LED
void top_left_LDR_ADC_set() {
	// Select Channel ADC5 (pin C4 = top left)
	ADMUX &= ~(1 << MUX0);
	ADMUX |= (1 << MUX1);
	ADMUX &= ~(1 << MUX2);
	ADMUX &= ~(1 << MUX3);
}

// bottom_right_LDR Green LED
void bottom_right_LDR_ADC_set() {
	// Select Channel ADC5 (pin C3 = bottom right)
	ADMUX &= ~(1 << MUX0);
	ADMUX &= ~(1 << MUX1);
	ADMUX |= (1 << MUX2);
	ADMUX |= (1 << MUX3);
}

// bottom_left_LDR Blue LED
void bottom_left_LDR_ADC_set() {
	// Select Channel ADC5 (pin C2 = bottom left)
	ADMUX &= ~(1 << MUX0);
	ADMUX &= ~(1 << MUX1);
	ADMUX |= (1 << MUX2);
	ADMUX &= ~(1 << MUX3);
}

int main(void)
{
	Initialize();
	
	while(1){
		moisture_value= ADC;
		
		if (moisture_value > 530) { // thirsty
			Frowny();
			} else { // smiley
			Smiley();
		}
	}
}

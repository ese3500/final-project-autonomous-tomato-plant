#define F_CPU 16000000UL
#define BAUD_RATE 9600
#define BAUD_PRESCALER (((F_CPU / (BAUD_RATE * 16UL))) - 1)

#include <avr/io.h>
#include "ST7735.h"
#include "LCD_GFX.h"
#include <stdlib.h>
#include <avr/interrupt.h>
#include <util/delay.h>

#include "uart.h"
char String[50];

// Enumeration for face types
typedef enum {
	FROWNY = 0,
	SMILEY = 1,
	DROWNING = 2
} FaceType;

FaceType face = FROWNY;  // Set the initial face to frowny

int moisture_value_ADC; // The moisture is measured by ADC

void Initialize()
{
	cli(); // Disable global interrupts
	
	// Water pump output pin
	DDRD |= (1<<DDRD2);
	//// Moisture sensor input pin
	//DDRC &= ~(1<<DDRC0);

	lcd_init();
	
	// Setup for ADC (10bit = 0-1023)
	// Clear power reduction bit for ADC
	PRR0 &= ~(1 << PRADC);

	// Select Vref = AVcc
	ADMUX |= (1 << REFS0);
	ADMUX &= ~(1 << REFS1);

	// Set the ADC clock div by 128
	// 16M/128=125kHz
	ADCSRA |= (1 << ADPS0);
	ADCSRA |= (1 << ADPS1);
	ADCSRA |= (1 << ADPS2);

	// Select Channel ADC0 (pin C0) for moisture sensor
	ADMUX &= ~(1 << MUX0);
	ADMUX &= ~(1 << MUX1);
	ADMUX &= ~(1 << MUX2);
	ADMUX &= ~(1 << MUX3);

	ADCSRA |= (1 << ADATE);   // Autotriggering of ADC

	// Free running mode ADTS[2:0] = 000
	ADCSRB &= ~(1 << ADTS0);
	ADCSRB &= ~(1 << ADTS1);
	ADCSRB &= ~(1 << ADTS2);

	// Disable digital input buffer on ADC pin
	DIDR0 |= (1 << ADC0D);

	// Enable ADC
	ADCSRA |= (1 << ADEN);

	// Start conversion
	ADCSRA |= (1 << ADSC);
	
	sei(); // Enable global interrupts
}

void Water_Plant() {
	//if (moisture_value_ADC > 570) {
	sprintf(String,"Pumping water\n");
	UART_putstring(String);
		
	PORTD |= (1<<PORTD2);
	_delay_ms(1850);
	PORTD &= ~(1<<PORTD2);
	
	sprintf(String,"Done pumping water\n");
	UART_putstring(String);
	
	_delay_ms(5000);
	//}
}

void Smiley() {
	LCD_setScreen(0xFFFF);
	LCD_drawString(1, 1, "I'm a happy basil", 0x0000, 0xFFFF);
	LCD_drawCircle(80, 73, 50, 0xFF0F); // Face
	LCD_drawCircle(55, 55, 6, 0x0000); // Eyes
	LCD_drawCircle(105, 55, 6, 0x0000);
	LCD_drawCircle(80, 90, 20, 0xF00F); // Mouth
	LCD_drawBlock(60, 70, 100, 90, 0xFF0F);
}

void Frowny() {
	LCD_setScreen(0xFFFF);
	LCD_drawString(1, 1, "Give me water!", 0x0000, 0xFFFF);
	LCD_drawCircle(80, 73, 50, 0xFF0F); // Face
	LCD_drawCircle(55, 55, 6, 0x0000); // Eyes
	LCD_drawCircle(105, 55, 6, 0x0000);
	LCD_drawCircle(80, 95, 20, 0xF00F); // Mouth
	LCD_drawBlock(60, 95, 100, 115, 0xFF0F);
}

void Drowning() {
	LCD_setScreen(0xFFFF);
	LCD_drawString(1, 1, "I'm drowning! Help!!", 0x0000, 0xFFFF);
	LCD_drawCircle(80, 73, 50, 0x00FF); // Face
	LCD_drawCircle(55, 55, 6, 0x0000); // Eyes
	LCD_drawCircle(105, 55, 6, 0x0000);
	LCD_drawCircle(80, 95, 20, 0xF00F); // Mouth
	LCD_drawBlock(60, 95, 100, 115, 0x00FF);
}

int main(void)
{
	Initialize();
	LCD_setScreen(0xFFFF);
	UART_init(BAUD_PRESCALER);

	
	while(1){
		moisture_value_ADC = ADC;

		sprintf(String,"Moisture ADC Value: %d \r\n", moisture_value_ADC);
		UART_putstring(String);
		_delay_ms(200);

		// We want the moisture value to be between 530-570. Anything above is too dry, and anything below is too wet.
		if (moisture_value_ADC > 450) {
			if (face == FROWNY) {
				// do nothing
				} else {
				face = FROWNY;
				Frowny();
			}
			Water_Plant();
			} else if (moisture_value_ADC > 330) {
			if (face == SMILEY) {
				// do nothing
				} else {
				face = SMILEY;
				Smiley();
			}
			} else {
			if (face == DROWNING) {
				// do nothing
				} else {
				face = DROWNING;
				Drowning();
			}
		}
	}
}
